% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cor_mat.R
\name{cor_mat}
\alias{cor_mat}
\alias{get_cor_mat_pval}
\alias{reorder_cor_mat}
\alias{replace_cor_by_symbols}
\alias{subset_cor_mat}
\title{Correlation Matrix with P-values}
\usage{
cor_mat(data, vars = NULL, method = "pearson", ...)

get_cor_mat_pval(x)

reorder_cor_mat(x)

replace_cor_by_symbols(x, cutpoints = c(0, 0.25, 0.5, 0.75, 1),
  symbols = c(" ", ".", "+", "*"))

subset_cor_mat(x, ..., vars = NULL)
}
\arguments{
\item{data}{a data.frame containing the variables.}

\item{vars}{a character vector containing at least two variable names.}

\item{method}{a character string indicating which correlation
    coefficient is to be  used for the test.  One of \code{"pearson"},
    \code{"kendall"}, or \code{"spearman"}, can be abbreviated.}

\item{...}{Additional arguments. \itemize{ \item In \code{cor_mat()}: Other
arguments passed to the function \code{\link{cor_test}()} \item In
\code{subset_cor_mat()}: One or more unquoted expressions separated by
commas. These arguments are passed to the function
\code{\link[dplyr]{select}}() }}

\item{x}{an object of class \code{cor_mat}}

\item{cutpoints}{numeric vector used for intervals. Default values are
\code{c(0, 0.25, 0.5, 0.75, 1)}.}

\item{symbols}{character vector, one shorter than cutpoints, used as
correlation coefficient symbols. Default values are \code{c(" ", ".",  "+",
"*")}.}
}
\value{
a data frame
}
\description{
Compute correlation matrix with p-values. Numeric columns in the
 data are detected and automatically selected.
}
\section{Functions}{
\itemize{
\item \code{cor_mat}: compute correlation matrix with p-values.

\item \code{get_cor_mat_pval}: return a correlation matrix p-values.

\item \code{reorder_cor_mat}: reorder correlation matrix, according to the coefficients,
using the hierarchical clustering method.

\item \code{replace_cor_by_symbols}: replace correlation coefficients by symbols

\item \code{subset_cor_mat}: subset of a correlation matrix
}}

\examples{
# Compute correlation matrix
#::::::::::::::::::::::::::::::::::::::::::
df <- mtcars[, c(1,3,4,5,6,7)]
cor.mat <- cor_mat(df)
cor.mat

# Pull lower/upper triangle parts
#::::::::::::::::::::::::::::::::::::::::::

# Pull lower triangular part
cor.mat \%>\% pull_lower_triangle()

# Pull upper triangular part
cor.mat \%>\% pull_upper_triangle()


# Replace correlation coefficient by symbols
#::::::::::::::::::::::::::::::::::::::::::
cor.mat \%>\%
 replace_cor_by_symbols(
   cutpoints = c(0, 0.25, 0.5, 0.75, 1),
   symbols = c(" ", ".",  "+", "*")
 ) \%>\%
 pull_lower_triangle()

# Reorder by correlation and get p-values
#::::::::::::::::::::::::::::::::::::::::::
# Reorder
cor.mat \%>\%
  reorder_cor_mat()
# Get p-values of the reordered cor_mat
cor.mat \%>\%
  reorder_cor_mat() \%>\%
  get_cor_mat_pval()

# Subsetting correlation matrix
#::::::::::::::::::::::::::::::::::::::::::

# Select some variables of interest
cor.mat \%>\%
  subset_cor_mat(mpg, drat, wt)

# Remove variables
cor.mat \%>\%
  subset_cor_mat(-mpg, -wt)

}
\seealso{
cor_test
}
